{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteralLoose([\"\\nmutation checkemail($email:String!){\\n  checkemail(email:$email)\\n}\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteralLoose([\"\\nmutation confirmUser($email:String!, $password : String!){\\n  confirmUser(email:$email password: $password)\\n}\\n\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  mutation confirmSecret($email : String! , $secret : String!\\n  ){\\n    confirmSecret (email : $email\\n    secret:$secret\\n    )\\n  } \\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  mutation createAccount(\\n    $username: String!\\n    $email: String!\\n    $firstName: String\\n    $lastName: String\\n    $password: String!\\n  ) {\\n    createAccount(\\n      password: $password\\n      username: $username\\n      email: $email\\n      firstName: $firstName\\n      lastName: $lastName\\n    )\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\nmutation requestSecret($email: String!){\\n    requestSecret(email:$email)\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from 'apollo-boost';\nexport var LOG_IN = gql(_templateObject());\nexport var CREATE_ACCOUNT = gql(_templateObject2());\nexport var CONFIRM_SECRET = gql(_templateObject3());\nexport var CONFIRM_USER = gql(_templateObject4());\nexport var CHECK_EMAIL = gql(_templateObject5());","map":{"version":3,"sources":["C:/Users/GG/Documents/finalproject/semicolon-app/screens/auth/AuthQueries.js"],"names":["gql","LOG_IN","CREATE_ACCOUNT","CONFIRM_SECRET","CONFIRM_USER","CHECK_EMAIL"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,cAApB;AAEA,OAAO,IAAMC,MAAM,GAAGD,GAAH,mBAAZ;AAKP,OAAO,IAAME,cAAc,GAAGF,GAAH,oBAApB;AAkBP,OAAO,IAAMG,cAAc,GAAGH,GAAH,oBAApB;AASP,OAAO,IAAMI,YAAY,GAAGJ,GAAH,oBAAlB;AAOP,OAAO,IAAMK,WAAW,GAAGL,GAAH,oBAAjB","sourcesContent":["import { gql } from 'apollo-boost';\r\n\r\nexport const LOG_IN = gql`\r\nmutation requestSecret($email: String!){\r\n    requestSecret(email:$email)\r\n}\r\n`;\r\nexport const CREATE_ACCOUNT = gql`\r\n  mutation createAccount(\r\n    $username: String!\r\n    $email: String!\r\n    $firstName: String\r\n    $lastName: String\r\n    $password: String!\r\n  ) {\r\n    createAccount(\r\n      password: $password\r\n      username: $username\r\n      email: $email\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n    )\r\n  }\r\n`;\r\n\r\nexport const CONFIRM_SECRET = gql`\r\n  mutation confirmSecret($email : String! , $secret : String!\r\n  ){\r\n    confirmSecret (email : $email\r\n    secret:$secret\r\n    )\r\n  } \r\n`;\r\n\r\nexport const CONFIRM_USER = gql`\r\nmutation confirmUser($email:String!, $password : String!){\r\n  confirmUser(email:$email password: $password)\r\n}\r\n\r\n`\r\n\r\nexport const CHECK_EMAIL = gql`\r\nmutation checkemail($email:String!){\r\n  checkemail(email:$email)\r\n}\r\n`"]},"metadata":{},"sourceType":"module"}