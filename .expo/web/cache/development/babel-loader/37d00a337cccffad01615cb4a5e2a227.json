{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\GG\\\\Documents\\\\finalproject\\\\semicolon-app\\\\components\\\\Comments.js\";\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  mutation addComment($postId: String!, $text: String!) {\\n    addComment(postId: $postId, text: $text) {\\n      id\\n      text\\n      user {\\n        username\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  flex-direction: row;\\n  padding: 15px;\\n  flex-direction: row;\\n  align-items: center;\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteralLoose([\"\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  font-weight: 300;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  font-weight: 700;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  margin-left: 10px;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  padding: 15px;\\n  flex-direction: row;\\n  align-items: center;\\n  background:white;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  margin-bottom: 15px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport styled from \"styled-components/native\";\nimport { AntDesign, FontAwesome } from \"@expo/vector-icons\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport PropTypes from \"prop-types\";\nimport Swiper from \"react-native-swiper\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"react-apollo-hooks\";\nimport { withNavigation } from \"react-navigation\";\nimport styles from \"../styles\";\nimport useInput from \"../hooks/useInput\";\nvar Container = styled.View(_templateObject());\nvar Header = styled.View(_templateObject2());\nvar Touchable = styled.TouchableOpacity(_templateObject3());\nvar HeaderUserContainer = styled.View(_templateObject4());\nvar Bold = styled.Text(_templateObject5());\nvar Text = styled.Text(_templateObject6());\nvar Caption = styled.Text(_templateObject7());\nvar Div = styled.View(_templateObject8());\nvar ADD_COMMENT = gql(_templateObject9());\n\nvar Comments = function Comments(_ref) {\n  var id = _ref.id,\n      user = _ref.user,\n      caption = _ref.caption,\n      _ref$comments = _ref.comments,\n      comments = _ref$comments === void 0 ? [] : _ref$comments,\n      navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      selfComments = _useState2[0],\n      setSelfComments = _useState2[1];\n\n  var commentInput = useInput(\"\");\n\n  var _useMutation = useMutation(ADD_COMMENT, {\n    variables: {\n      postId: id,\n      text: commentInput.value\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      addCommentMutation = _useMutation2[0];\n\n  var submitComment = function submitComment() {\n    var _await$addCommentMuta, addComment;\n\n    return _regeneratorRuntime.async(function submitComment$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(addCommentMutation());\n\n          case 3:\n            _await$addCommentMuta = _context.sent;\n            addComment = _await$addCommentMuta.data.addComment;\n            setSelfComments([].concat(_toConsumableArray(selfComments), [addComment]));\n            commentInput.setValue(\"\");\n            Keyboard.dismiss();\n            _context.next = 12;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  return React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, React.createElement(Touchable, {\n    onPress: function onPress() {\n      return navigation.navigate(\"UserDetail\", {\n        username: user.username\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: {\n      height: 30,\n      width: 30,\n      borderRadius: 15\n    },\n    source: {\n      uri: user.avatar\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  })), React.createElement(Touchable, {\n    onPress: function onPress() {\n      return navigation.navigate(\"UserDetail\", {\n        username: user.username\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, React.createElement(HeaderUserContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, React.createElement(Caption, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, React.createElement(Bold, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, user.username), \" \", caption)))), React.createElement(KeyboardAwareScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      flex: 1,\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, comments.map(function (comment) {\n    return React.createElement(Touchable, {\n      onPress: function onPress() {\n        return navigation.navigate(\"UserDetail\", {\n          username: comment.user.username\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 8\n      }\n    }, React.createElement(Div, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, React.createElement(Image, {\n      style: {\n        height: 30,\n        width: 30,\n        borderRadius: 15\n      },\n      source: {\n        uri: comment.user.avatar\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }), React.createElement(Bold, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, comment.user.username), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, \" \", comment.text)));\n  }), React.createElement(TextInput, {\n    value: commentInput.value,\n    onChangeText: commentInput.onChange,\n    placeholder: \"댓글 달기...\",\n    style: {\n      marginLeft: 10,\n      height: 50,\n      backgroundColor: \"white\",\n      width: \"95%\",\n      borderRadius: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 10\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return submitComment();\n    },\n    style: {\n      width: 50\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: styles.blueColor\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 81\n    }\n  }, \"\\uAC8C\\uC2DC\")))));\n};\n\nComments.propTypes = {\n  id: PropTypes.string.isRequired,\n  user: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    avatar: PropTypes.string,\n    username: PropTypes.string.isRequired\n  }).isRequired,\n  comments: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    user: PropTypes.shape({\n      avatar: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      username: PropTypes.string.isRequired\n    }).isRequired\n  })).isRequired,\n  caption: PropTypes.string.isRequired,\n  location: PropTypes.string,\n  createdAt: PropTypes.string.isRequired\n};\nexport default withNavigation(Comments);","map":{"version":3,"sources":["C:/Users/GG/Documents/finalproject/semicolon-app/components/Comments.js"],"names":["React","useState","styled","AntDesign","FontAwesome","KeyboardAwareScrollView","TouchableOpacity","PropTypes","Swiper","gql","useMutation","withNavigation","styles","useInput","Container","View","Header","Touchable","HeaderUserContainer","Bold","Text","Caption","Div","ADD_COMMENT","Comments","id","user","caption","comments","navigation","selfComments","setSelfComments","commentInput","variables","postId","text","value","addCommentMutation","submitComment","addComment","data","setValue","Keyboard","dismiss","navigate","username","height","width","borderRadius","uri","avatar","flex","padding","map","comment","onChange","marginLeft","backgroundColor","color","blueColor","propTypes","string","isRequired","shape","arrayOf","location","createdAt"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Image, TextInput, ScrollView, KeyboardAvoidingView } from \"react-native\";\r\nimport styled from \"styled-components/native\";\r\nimport { AntDesign, FontAwesome } from \"@expo/vector-icons\";\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport PropTypes from \"prop-types\";\r\nimport Swiper from \"react-native-swiper\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useMutation } from \"react-apollo-hooks\";\r\nimport { withNavigation } from \"react-navigation\";\r\nimport styles from \"../styles\";\r\nimport useInput from \"../hooks/useInput\";\r\n\r\nconst Container = styled.View`\r\n  margin-bottom: 15px;\r\n`;\r\nconst Header = styled.View`\r\n  padding: 15px;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  background:white;\r\n`;\r\nconst Touchable = styled.TouchableOpacity``;\r\n\r\nconst HeaderUserContainer = styled.View`\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Bold = styled.Text`\r\n  font-weight: 700;\r\n`;\r\n\r\nconst Text = styled.Text`\r\n  font-weight: 300;\r\n`;\r\n\r\nconst Caption = styled.Text`\r\n`;\r\nconst Div = styled.View`\r\n  flex-direction: row;\r\n  padding: 15px;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst ADD_COMMENT = gql`\r\n  mutation addComment($postId: String!, $text: String!) {\r\n    addComment(postId: $postId, text: $text) {\r\n      id\r\n      text\r\n      user {\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Comments = ({\r\n  id,\r\n  user,\r\n  caption,\r\n  comments = [],\r\n  navigation\r\n}) => {\r\n  const [selfComments, setSelfComments] = useState();\r\n  // const [isCommenting, setIsCommenting] = useState(false);\r\n  const commentInput = useInput(\"\");\r\n  const [addCommentMutation] = useMutation(ADD_COMMENT, {\r\n    variables: { postId: id, text: commentInput.value }\r\n  });\r\n  const submitComment = async () => {\r\n    // if (commentInput.value !== \"\" && isCommenting === false) {\r\n    //   setIsCommenting(true);\r\n    // // }\r\n    // const { which } = event;\r\n    // if (which === 13) {\r\n    //   event.preventDefault();\r\n      try {\r\n        const {\r\n          data: { addComment }\r\n        } = await addCommentMutation();\r\n        setSelfComments([...selfComments, addComment]);\r\n        commentInput.setValue(\"\");\r\n        Keyboard.dismiss();\r\n      } catch {\r\n      } \r\n    }\r\n  ;\r\n\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <Touchable\r\n          onPress={() => navigation.navigate(\"UserDetail\", { username: user.username })}>\r\n          <Image\r\n            style={{ height: 30, width: 30, borderRadius: 15 }}\r\n            source={{ uri: user.avatar }}\r\n          />\r\n        </Touchable>\r\n        <Touchable onPress={() => navigation.navigate(\"UserDetail\", { username: user.username })}>\r\n          <HeaderUserContainer>\r\n        <Caption>\r\n          <Bold>{user.username}</Bold> {caption}\r\n        </Caption>\r\n          </HeaderUserContainer>\r\n        </Touchable>\r\n      </Header>\r\n\r\n      <KeyboardAwareScrollView>\r\n        \r\n      <ScrollView style={{flex: 1, padding:10}} >\r\n          \r\n        {comments.map(comment => (\r\n      \r\n       <Touchable onPress={() => navigation.navigate(\"UserDetail\", { username: comment.user.username })}>\r\n            <Div>\r\n               \r\n            <Image\r\n              style={{ height: 30, width: 30, borderRadius: 15 }}\r\n              source={{ uri: comment.user.avatar }}\r\n            />\r\n            <Bold>{comment.user.username}</Bold>\r\n                 \r\n            <Text> {comment.text}</Text>\r\n  </Div>\r\n        </Touchable>\r\n                \r\n        ))}\r\n   \r\n         <TextInput\r\n            value={commentInput.value}\r\n            onChangeText={commentInput.onChange}\r\n            placeholder={\"댓글 달기...\"}\r\n            // onChangeText={onChangeText}\r\n            style={{\r\n              marginLeft: 10,\r\n              height: 50,\r\n              backgroundColor: \"white\",\r\n              width: \"95%\",\r\n              borderRadius: 10,\r\n            }}\r\n          />\r\n          <TouchableOpacity onPress={() => submitComment()} style={{width: 50}}><Text style={{color: styles.blueColor}}>게시</Text></TouchableOpacity>\r\n          </ScrollView>\r\n      </KeyboardAwareScrollView>\r\n      {/* </KeyboardAvoidingView> */}\r\n      </Container>\r\n        \r\n  )\r\n};\r\n\r\nComments.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  user: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string,\r\n    username: PropTypes.string.isRequired\r\n  }).isRequired,\r\n  comments: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      text: PropTypes.string.isRequired,\r\n      user: PropTypes.shape({\r\n        avatar:PropTypes.string.isRequired,\r\n        id: PropTypes.string.isRequired,\r\n        username: PropTypes.string.isRequired\r\n      }).isRequired\r\n    })\r\n  ).isRequired,\r\n  caption: PropTypes.string.isRequired,\r\n  location: PropTypes.string,\r\n  createdAt: PropTypes.string.isRequired\r\n};\r\n\r\nexport default withNavigation(Comments);\r\n"]},"metadata":{},"sourceType":"module"}