{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\GG\\\\Documents\\\\finalproject\\\\semicolon-app\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { AntDesign } from '@expo/vector-icons';\nimport AppLoading from 'expo-app-loading';\nimport * as Font from 'expo-font';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Asset from 'expo-asset';\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  var preLoad = function preLoad() {\n    return _regeneratorRuntime.async(function preLoad$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Font.loadAsync(_objectSpread({}, AntDesign.font)));\n\n          case 3:\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(Asset.loadAsync([require(\"./assets/icon.png\")]));\n\n          case 5:\n            setLoaded(true);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  useEffect(function () {\n    preLoad();\n  }, []);\n  return loaded ? React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 20\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 26\n    }\n  }, \"\\uBC18\\uAC00\\uC6CC\\uC694!\")) : React.createElement(AppLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 56\n    }\n  }, React.createElement(AntDesign, {\n    name: \"staro\",\n    size: 24,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 68\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/GG/Documents/finalproject/semicolon-app/App.js"],"names":["React","useState","useEffect","AntDesign","AppLoading","Font","Asset","App","loaded","setLoaded","preLoad","loadAsync","font","require","console","log"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;;;AAEA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACAN,QAAQ,CAAC,KAAD,CADR;AAAA;AAAA,MACrBO,MADqB;AAAA,MACbC,SADa;;AAE5B,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAGNL,IAAI,CAACM,SAAL,mBACDR,SAAS,CAACS,IADT,EAHM;;AAAA;AAAA;AAAA,6CAMNN,KAAK,CAACK,SAAN,CAAgB,CAACE,OAAO,qBAAR,CAAhB,CANM;;AAAA;AAOZJ,YAAAA,SAAS,CAAC,IAAD,CAAT;AAPY;AAAA;;AAAA;AAAA;AAAA;AAUZK,YAAAA,OAAO,CAACC,GAAR;;AAVY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAeAb,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAGA,SAAOF,MAAM,GAAI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAN,CAAJ,GAAwC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAY,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,OAAhB;AAAwB,IAAA,IAAI,EAAE,EAA9B;AAAkC,IAAA,KAAK,EAAC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAZ,CAArD;AAED","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { AntDesign } from '@expo/vector-icons';\nimport AppLoading from 'expo-app-loading';\nimport * as Font from 'expo-font';\nimport { Text, View } from 'react-native';\nimport Asset from 'expo-asset';\n\nexport default function App() {\n  const [loaded, setLoaded] = useState(false);\n  const preLoad = async () => {\n    try {\n\n      await Font.loadAsync({\n        ...AntDesign.font\n      });\n      await Asset.loadAsync([require(\"./assets/icon.png\")])\n      setLoaded(true);\n\n    } catch (e) {\n      console.log(e);\n    }\n\n  }\n\n  useEffect(() => {\n    preLoad();\n  }, []);\n  return loaded ? (<View><Text>반가워요!</Text></View>) : (<AppLoading><AntDesign name=\"staro\" size={24} color=\"black\" /></AppLoading>)\n\n}\n"]},"metadata":{},"sourceType":"module"}