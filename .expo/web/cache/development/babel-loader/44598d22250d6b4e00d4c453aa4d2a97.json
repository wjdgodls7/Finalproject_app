{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\GG\\\\Documents\\\\finalproject\\\\semicolon-app\\\\navigation\\\\EventNavigation\\\\NavigationContainer.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  margin-top : -30px;\\n  margin-bottom : -30px;\\n  width: \", \";\\n  \\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from \"react\";\nimport * as Location from 'expo-location';\nimport constants from \"../../Constants\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport NavigationPresenter from \"./NavigationPresenter\";\nimport styled from \"styled-components/native\";\nvar Image = styled.Image(_templateObject(), constants.width / 3);\nexport default (function () {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      location = _useState4[0],\n      setLocation = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Location$reque, status, _await$Location$getCu, _await$Location$getCu2, latitude, longitude, _await$Location$rever, _await$Location$rever2, region;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== 'granted')) {\n                _context.next = 7;\n                break;\n              }\n\n              Alert.alert(\"Woops!\", \"위치정보를 찾을수 없어요!\");\n              return _context.abrupt(\"return\");\n\n            case 7:\n              _context.prev = 7;\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync());\n\n            case 10:\n              _await$Location$getCu = _context.sent;\n              _await$Location$getCu2 = _await$Location$getCu.coords;\n              latitude = _await$Location$getCu2.latitude;\n              longitude = _await$Location$getCu2.longitude;\n              _context.next = 16;\n              return _regeneratorRuntime.awrap(Location.reverseGeocodeAsync({\n                latitude: latitude,\n                longitude: longitude\n              }));\n\n            case 16:\n              _await$Location$rever = _context.sent;\n              _await$Location$rever2 = _slicedToArray(_await$Location$rever, 1);\n              region = _await$Location$rever2[0].region;\n              setLocation({\n                latitude: latitude,\n                longitude: longitude,\n                region: region.toLowerCase()\n              });\n              setLoading(false);\n              _context.next = 27;\n              break;\n\n            case 23:\n              _context.prev = 23;\n              _context.t0 = _context[\"catch\"](7);\n              console.log(_context.t0);\n              Alert.alert(\"위치를 찾을수없어요\", \"위치정보를 켜주세요!\");\n\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[7, 23]], Promise);\n    })();\n  }, []);\n  return loading ? React.createElement(Image, {\n    resizeMode: \"contain\",\n    source: require(\"../../assets/logo.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 20\n    }\n  }) : React.createElement(NavigationPresenter, {\n    location: location,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 99\n    }\n  });\n});","map":{"version":3,"sources":["C:/Users/GG/Documents/finalproject/semicolon-app/navigation/EventNavigation/NavigationContainer.js"],"names":["React","useState","useEffect","Location","constants","NavigationPresenter","styled","Image","width","loading","setLoading","location","setLocation","requestPermissionsAsync","status","Alert","alert","getCurrentPositionAsync","coords","latitude","longitude","reverseGeocodeAsync","region","toLowerCase","console","log","require"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;AACA,OAAOC,SAAP;;AAEA,OAAOC,mBAAP;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAGA,IAAMC,KAAK,GAAGD,MAAM,CAACC,KAAV,oBAGAH,SAAS,CAACI,KAAV,GAAkB,CAHlB,CAAX;AAOA,gBAAe,YAAM;AAAA,kBACSP,QAAQ,CAAC,IAAD,CADjB;AAAA;AAAA,MACdQ,OADc;AAAA,MACLC,UADK;;AAAA,mBAEWT,QAAQ,CAAC,IAAD,CAFnB;AAAA;AAAA,MAEdU,QAFc;AAAA,MAEJC,WAFI;;AAInBV,EAAAA,SAAS,CAAC,YAAM;AACd,KAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACwBC,QAAQ,CAACU,uBAAT,EADxB;;AAAA;AAAA;AACOC,cAAAA,MADP,yBACOA,MADP;;AAAA,oBAEKA,MAAM,KAAK,SAFhB;AAAA;AAAA;AAAA;;AAGGC,cAAAA,KAAK,CAACC,KAAN,CAAY,QAAZ,EAAqB,gBAArB;AAHH;;AAAA;AAAA;AAAA;AAAA,+CAQqDb,QAAQ,CAACc,uBAAT,EARrD;;AAAA;AAAA;AAAA,6DAQWC,MARX;AAQqBC,cAAAA,QARrB,0BAQqBA,QARrB;AAQ+BC,cAAAA,SAR/B,0BAQ+BA,SAR/B;AAAA;AAAA,+CAS+BjB,QAAQ,CAACkB,mBAAT,CAA6B;AAACF,gBAAAA,QAAQ,EAARA,QAAD;AAAUC,gBAAAA,SAAS,EAATA;AAAV,eAA7B,CAT/B;;AAAA;AAAA;AAAA;AASYE,cAAAA,MATZ,6BASYA,MATZ;AAUKV,cAAAA,WAAW,CAAC;AAAEO,gBAAAA,QAAQ,EAARA,QAAF;AAAYC,gBAAAA,SAAS,EAATA,SAAZ;AAAuBE,gBAAAA,MAAM,EAAEA,MAAM,CAACC,WAAP;AAA/B,eAAD,CAAX;AACAb,cAAAA,UAAU,CAAC,KAAD,CAAV;AAXL;AAAA;;AAAA;AAAA;AAAA;AAaGc,cAAAA,OAAO,CAACC,GAAR;AACAV,cAAAA,KAAK,CAACC,KAAN,CAAY,YAAZ,EAAyB,aAAzB;;AAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAkBD,GAnBQ,EAmBN,EAnBM,CAAT;AAqBE,SACIP,OAAO,GAAI,oBAAC,KAAD;AAAO,IAAA,UAAU,EAAE,SAAnB;AAA8B,IAAA,MAAM,EAAEiB,OAAO,yBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,GAAmF,oBAAC,mBAAD;AAAqB,IAAA,QAAQ,EAAEf,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD9F;AAEA,CA3BJ","sourcesContent":["import React, { useState , useEffect } from \"react\";\r\nimport * as Location from 'expo-location';\r\nimport constants from \"../../Constants\";\r\nimport { Alert } from 'react-native';\r\nimport NavigationPresenter from \"./NavigationPresenter\";\r\nimport styled from \"styled-components/native\";\r\n\r\n\r\nconst Image = styled.Image`\r\n  margin-top : -30px;\r\n  margin-bottom : -30px;\r\n  width: ${constants.width / 3};\r\n  \r\n`;\r\n\r\nexport default () => {\r\nconst [loading, setLoading] = useState(true);\r\nconst [location, setLocation] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    (async () => {\r\n      let { status } = await Location.requestPermissionsAsync();\r\n      if (status !== 'granted') {\r\n        Alert.alert(\"Woops!\",\"위치정보를 찾을수 없어요!\")\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const { coords: { latitude, longitude } } = await Location.getCurrentPositionAsync();\r\n        const [{ region }]  = await Location.reverseGeocodeAsync({latitude,longitude});\r\n          setLocation({ latitude, longitude, region: region.toLowerCase() });\r\n          setLoading(false);\r\n      } catch (e) {\r\n        console.log(e);\r\n        Alert.alert(\"위치를 찾을수없어요\",\"위치정보를 켜주세요!\")\r\n      }\r\n\r\n    })();\r\n  }, []);\r\n    \r\n    return (\r\n        loading ? (<Image resizeMode={\"contain\"} source={require(\"../../assets/logo.png\")} />) : (<NavigationPresenter location={location} />)\r\n  )};"]},"metadata":{},"sourceType":"module"}