{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\GG\\\\Documents\\\\finalproject\\\\semicolon-app\\\\screens\\\\auth\\\\Confirm.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  justify-content: center;\\n  align-items: center;\\n  flex: 1;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components/native\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport AuthButton from \"../../components/AuthButton\";\nimport AuthInput from \"../../components/AuthInput\";\nimport useInput from \"../../hooks/useInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useMutation } from 'react-apollo-hooks';\nimport { CONFIRM_SECRET } from \"./AuthQueries\";\nvar View = styled.View(_templateObject());\nexport default (function (_ref) {\n  var navigation = _ref.navigation;\n  var confirmInput = useInput(\"\");\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useMutation = useMutation(CONFIRM_SECRET, {\n    variables: {\n      secret: confirmInput.value,\n      email: navigation.getParam(\"email\")\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      confirmSecretMutation = _useMutation2[0];\n\n  var handleConfirm = function handleConfirm() {\n    var value, _await$confirmSecretM, confirmSecret;\n\n    return _regeneratorRuntime.async(function handleConfirm$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            value = confirmInput.value;\n\n            if (!(value === \"\" || !value.includes(\" \"))) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Alert.alert(\"제대로 입력해주세요!\"));\n\n          case 3:\n            _context.prev = 3;\n            setLoading(true);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(confirmSecretMutation());\n\n          case 7:\n            _await$confirmSecretM = _context.sent;\n            confirmSecret = _await$confirmSecretM.data.confirmSecret;\n\n            if (confirmSecret !== \"\" || confirmSecret !== false) {\n              navigation.navigate(\"Signup\", {\n                email: navigation.getParam(\"email\")\n              });\n            } else {\n              Alert.alert(\"시크릿 코드가 틀렸어요..\");\n            }\n\n            _context.next = 16;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](3);\n            console.log(_context.t0);\n            Alert.alert(\"지금은 시도할 수 없어요.\");\n\n          case 16:\n            _context.prev = 16;\n            setLoading(false);\n            return _context.finish(16);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 12, 16, 19]], Promise);\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(AuthInput, _extends({}, confirmInput, {\n    placeholder: \"Secret\",\n    returnKeyType: \"send\",\n    onSubmitEditing: handleConfirm,\n    autoCorrect: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })), React.createElement(AuthButton, {\n    loading: loading,\n    onPress: handleConfirm,\n    text: \"\\uD655\\uC778\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })));\n});","map":{"version":3,"sources":["C:/Users/GG/Documents/finalproject/semicolon-app/screens/auth/Confirm.js"],"names":["React","useState","styled","AuthButton","AuthInput","useInput","useMutation","CONFIRM_SECRET","View","navigation","confirmInput","loading","setLoading","variables","secret","value","email","getParam","confirmSecretMutation","handleConfirm","includes","Alert","alert","confirmSecret","data","navigate","console","log","Keyboard","dismiss"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;AAEA,OAAOC,UAAP;AACA,OAAOC,SAAP;AACA,OAAOC,QAAP;;AAEA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,cAAT;AAGA,IAAMC,IAAI,GAAGN,MAAM,CAACM,IAAV,mBAAV;AAMA,gBAAe,gBAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AACjC,MAAMC,YAAY,GAAGL,QAAQ,CAAC,EAAD,CAA7B;;AADiC,kBAEHJ,QAAQ,CAAC,KAAD,CAFL;AAAA;AAAA,MAE1BU,OAF0B;AAAA,MAEjBC,UAFiB;;AAAA,qBAGDN,WAAW,CAACC,cAAD,EAAiB;AAC1DM,IAAAA,SAAS,EAAE;AACTC,MAAAA,MAAM,EAAEJ,YAAY,CAACK,KADZ;AAETC,MAAAA,KAAK,EAAEP,UAAU,CAACQ,QAAX,CAAoB,OAApB;AAFE;AAD+C,GAAjB,CAHV;AAAA;AAAA,MAG1BC,qBAH0B;;AASjC,MAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACZJ,YAAAA,KADY,GACFL,YADE,CACZK,KADY;;AAAA,kBAEhBA,KAAK,KAAK,EAAV,IAAgB,CAACA,KAAK,CAACK,QAAN,CAAe,GAAf,CAFD;AAAA;AAAA;AAAA;;AAAA,6CAGXC,KAAK,CAACC,KAAN,CAAY,aAAZ,CAHW;;AAAA;AAAA;AAMlBV,YAAAA,UAAU,CAAC,IAAD,CAAV;AANkB;AAAA,6CASRM,qBAAqB,EATb;;AAAA;AAAA;AAQRK,YAAAA,aARQ,yBAQhBC,IARgB,CAQRD,aARQ;;AAUlB,gBAAIA,aAAa,KAAK,EAAlB,IAAwBA,aAAa,KAAK,KAA9C,EAAqD;AACnDd,cAAAA,UAAU,CAACgB,QAAX,CAAoB,QAApB,EAA8B;AAAET,gBAAAA,KAAK,EAAEP,UAAU,CAACQ,QAAX,CAAoB,OAApB;AAAT,eAA9B;AACD,aAFD,MAEO;AACLI,cAAAA,KAAK,CAACC,KAAN,CAAY,gBAAZ;AACD;;AAdiB;AAAA;;AAAA;AAAA;AAAA;AAgBlBI,YAAAA,OAAO,CAACC,GAAR;AACAN,YAAAA,KAAK,CAACC,KAAN,CAAY,gBAAZ;;AAjBkB;AAAA;AAmBlBV,YAAAA,UAAU,CAAC,KAAD,CAAV;AAnBkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAsBA,SACE,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAEgB,QAAQ,CAACC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD,eACMnB,YADN;AAEE,IAAA,WAAW,EAAC,QAFd;AAGE,IAAA,aAAa,EAAC,MAHhB;AAIE,IAAA,eAAe,EAAES,aAJnB;AAKE,IAAA,WAAW,EAAE,KALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAQE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAER,OAArB;AAA8B,IAAA,OAAO,EAAEQ,aAAvC;AAAsD,IAAA,IAAI,EAAC,cAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,CADF;AAcD,CA7CD","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components/native\";\r\nimport { TouchableWithoutFeedback, Keyboard } from \"react-native\";\r\nimport AuthButton from \"../../components/AuthButton\";\r\nimport AuthInput from \"../../components/AuthInput\";\r\nimport useInput from \"../../hooks/useInput\";\r\nimport { Alert } from \"react-native\";\r\nimport { useMutation } from 'react-apollo-hooks';\r\nimport { CONFIRM_SECRET } from \"./AuthQueries\";\r\n\r\n\r\nconst View = styled.View`\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex: 1;\r\n`;\r\n\r\nexport default ({ navigation }) => {\r\n  const confirmInput = useInput(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [confirmSecretMutation] = useMutation(CONFIRM_SECRET, {\r\n    variables: {\r\n      secret: confirmInput.value,\r\n      email: navigation.getParam(\"email\")\r\n    }\r\n  });\r\n  const handleConfirm = async () => {\r\n    const { value } = confirmInput;\r\n    if (value === \"\" || !value.includes(\" \")) {\r\n      return Alert.alert(\"제대로 입력해주세요!\");\r\n    }\r\n    try {\r\n      setLoading(true);\r\n      const {\r\n        data: { confirmSecret }\r\n      } = await confirmSecretMutation();\r\n      if (confirmSecret !== \"\" || confirmSecret !== false) {\r\n        navigation.navigate(\"Signup\", { email: navigation.getParam(\"email\") });\r\n      } else {\r\n        Alert.alert(\"시크릿 코드가 틀렸어요..\");\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      Alert.alert(\"지금은 시도할 수 없어요.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  return (\r\n    <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n      <View>\r\n        <AuthInput\r\n          {...confirmInput}\r\n          placeholder=\"Secret\"\r\n          returnKeyType=\"send\"\r\n          onSubmitEditing={handleConfirm}\r\n          autoCorrect={false}\r\n        />\r\n        <AuthButton loading={loading} onPress={handleConfirm} text=\"확인\" />\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}