{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\GG\\\\Documents\\\\finalproject\\\\semicolon-app\\\\screens\\\\auth\\\\LoginConfirm.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  justify-content: center;\\n  align-items: center;\\n  flex: 1;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components/native\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport AuthButton from \"../../components/AuthButton\";\nimport AuthInput from \"../../components/AuthInput\";\nimport useInput from \"../../hooks/useInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useMutation } from 'react-apollo-hooks';\nimport { useLogIn } from \"../../AuthContext\";\nimport { CONFIRM_USER } from \"./AuthQueries\";\nvar View = styled.View(_templateObject());\nexport default (function (_ref) {\n  var navigation = _ref.navigation;\n  var Pwinput = useInput(\"\");\n  var logIn = useLogIn();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useMutation = useMutation(CONFIRM_USER, {\n    variables: {\n      password: Pwinput.value,\n      email: navigation.getParam(\"email\")\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      confirmUserMutation = _useMutation2[0];\n\n  var handleConfirm = function handleConfirm() {\n    var value, _await$confirmUserMut, confirmUser;\n\n    return _regeneratorRuntime.async(function handleConfirm$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            value = Pwinput.value;\n\n            if (!(value === \"\")) {\n              _context.next = 4;\n              break;\n            }\n\n            console.log(value);\n            return _context.abrupt(\"return\", Alert.alert(\"비밀번호를 제대로 입력해 주세요.\"));\n\n          case 4:\n            _context.prev = 4;\n            setLoading(true);\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(confirmUserMutation());\n\n          case 8:\n            _await$confirmUserMut = _context.sent;\n            confirmUser = _await$confirmUserMut.data.confirmUser;\n\n            if (confirmUser !== \"\" || confirmUser !== \"츄라이 츄라이 어게인\") {\n              console.log(confirmUser);\n              logIn(confirmUser);\n            } else {\n              Alert.alert(\"비밀번호가 틀렸어요!\");\n            }\n\n            _context.next = 17;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](4);\n            console.log(_context.t0);\n            Alert.alert(\"비밀번호 오류 😎\");\n\n          case 17:\n            _context.prev = 17;\n            setLoading(false);\n            return _context.finish(17);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[4, 13, 17, 20]], Promise);\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, React.createElement(AuthInput, _extends({}, Pwinput, {\n    placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n    returnKeyType: \"send\",\n    onSubmitEditing: handleConfirm,\n    autoCorrect: false,\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  })), React.createElement(AuthButton, {\n    loading: loading,\n    onPress: handleConfirm,\n    text: \"\\uB85C\\uADF8\\uC778\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  })));\n});","map":{"version":3,"sources":["C:/Users/GG/Documents/finalproject/semicolon-app/screens/auth/LoginConfirm.js"],"names":["React","useState","styled","AuthButton","AuthInput","useInput","useMutation","useLogIn","CONFIRM_USER","View","navigation","Pwinput","logIn","loading","setLoading","variables","password","value","email","getParam","confirmUserMutation","handleConfirm","console","log","Alert","alert","confirmUser","data","Keyboard","dismiss"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;AAEA,OAAOC,UAAP;AACA,OAAOC,SAAP;AACA,OAAOC,QAAP;;AAEA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,QAAT;AACA,SAASC,YAAT;AAEA,IAAMC,IAAI,GAAGP,MAAM,CAACO,IAAV,mBAAV;AAMA,gBAAe,gBAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAC/B,MAAMC,OAAO,GAAGN,QAAQ,CAAC,EAAD,CAAxB;AACA,MAAMO,KAAK,GAAGL,QAAQ,EAAtB;;AAF+B,kBAGDN,QAAQ,CAAC,KAAD,CAHP;AAAA;AAAA,MAGxBY,OAHwB;AAAA,MAGfC,UAHe;;AAAA,qBAIDR,WAAW,CAACE,YAAD,EAAe;AACpDO,IAAAA,SAAS,EAAE;AACPC,MAAAA,QAAQ,EAAEL,OAAO,CAACM,KADX;AAEPC,MAAAA,KAAK,EAAER,UAAU,CAACS,QAAX,CAAoB,OAApB;AAFA;AADyC,GAAf,CAJV;AAAA;AAAA,MAIxBC,mBAJwB;;AAU/B,MAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACVJ,YAAAA,KADU,GACAN,OADA,CACVM,KADU;;AAAA,kBAEdA,KAAK,KAAK,EAFI;AAAA;AAAA;AAAA;;AAGdK,YAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AAHc,6CAIPO,KAAK,CAACC,KAAN,CAAY,oBAAZ,CAJO;;AAAA;AAAA;AAOdX,YAAAA,UAAU,CAAC,IAAD,CAAV;AAPc;AAAA,6CAUJM,mBAAmB,EAVf;;AAAA;AAAA;AASFM,YAAAA,WATE,yBASVC,IATU,CASFD,WATE;;AAWd,gBAAIA,WAAW,KAAK,EAAhB,IAAsBA,WAAW,KAAK,aAA1C,EAAyD;AACrDJ,cAAAA,OAAO,CAACC,GAAR,CAAYG,WAAZ;AACAd,cAAAA,KAAK,CAACc,WAAD,CAAL;AACH,aAHD,MAGO;AACHF,cAAAA,KAAK,CAACC,KAAN,CAAY,aAAZ;AACH;;AAhBa;AAAA;;AAAA;AAAA;AAAA;AAkBdH,YAAAA,OAAO,CAACC,GAAR;AACAC,YAAAA,KAAK,CAACC,KAAN,CAAY,YAAZ;;AAnBc;AAAA;AAqBdX,YAAAA,UAAU,CAAC,KAAD,CAAV;AArBc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAwBA,SACI,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAEc,QAAQ,CAACC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD,eACQlB,OADR;AAEI,IAAA,WAAW,EAAC,0BAFhB;AAGI,IAAA,aAAa,EAAC,MAHlB;AAII,IAAA,eAAe,EAAEU,aAJrB;AAKI,IAAA,WAAW,EAAE,KALjB;AAMI,IAAA,eAAe,EAAE,IANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,EASI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAER,OAArB;AAA8B,IAAA,OAAO,EAAEQ,aAAvC;AAAsD,IAAA,IAAI,EAAC,oBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADJ,CADJ;AAeH,CAjDD","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components/native\";\r\nimport { TouchableWithoutFeedback, Keyboard } from \"react-native\";\r\nimport AuthButton from \"../../components/AuthButton\";\r\nimport AuthInput from \"../../components/AuthInput\";\r\nimport useInput from \"../../hooks/useInput\";\r\nimport { Alert } from \"react-native\";\r\nimport { useMutation } from 'react-apollo-hooks';\r\nimport { useLogIn } from \"../../AuthContext\";\r\nimport { CONFIRM_USER } from \"./AuthQueries\";\r\n\r\nconst View = styled.View`\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex: 1;\r\n`;\r\n\r\nexport default ({ navigation }) => {\r\n    const Pwinput = useInput(\"\");\r\n    const logIn = useLogIn();\r\n    const [loading, setLoading] = useState(false);\r\n    const [confirmUserMutation] = useMutation(CONFIRM_USER, {\r\n        variables: {\r\n            password: Pwinput.value,\r\n            email: navigation.getParam(\"email\")\r\n        }\r\n    });\r\n    const handleConfirm = async () => {\r\n        const { value } = Pwinput;\r\n        if (value === \"\") {\r\n            console.log(value);\r\n            return Alert.alert(\"비밀번호를 제대로 입력해 주세요.\");\r\n        }\r\n        try {\r\n            setLoading(true);\r\n            const {\r\n                data: { confirmUser }\r\n            } = await confirmUserMutation();\r\n            if (confirmUser !== \"\" || confirmUser !== \"츄라이 츄라이 어게인\") {\r\n                console.log(confirmUser);\r\n                logIn(confirmUser);\r\n            } else {\r\n                Alert.alert(\"비밀번호가 틀렸어요!\");\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n            Alert.alert(\"비밀번호 오류 😎\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n    return (\r\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n            <View>\r\n                <AuthInput\r\n                    {...Pwinput}\r\n                    placeholder=\"비밀번호\"\r\n                    returnKeyType=\"send\"\r\n                    onSubmitEditing={handleConfirm}\r\n                    autoCorrect={false}\r\n                    secureTextEntry={true}\r\n                />\r\n                <AuthButton loading={loading} onPress={handleConfirm} text=\"로그인\" />\r\n            </View>\r\n        </TouchableWithoutFeedback>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}